-- add <script> tag in the body section of the html. not the head.
-- <noscript> is a tag that will display a particular message if the javascript is turned off using a extension
-- generally js is included into another file and import it to html.
-- usage of "differ" in the tag.
-- var keyword is used to define a variable. 
-- float and integers are of type numbers.
-- anything with a text is a string. 
-- array is an object 
-- [1,2,3,'4'] || [1, 2 , 3, variable]. index of an array starts with "0".
-- undefined keyword, Null, NaN
-- null==undefined /*the output is true*/
   null === undefined /*the output is false*//*strict equals, checks type equality*/
   typeof NaN is a number. 
   typeof null is an object.
   typeof undefined is undefined.

-- objects. can have fields and methods. 
  var aman{
  name:'aman'
  };
  
  consolelog(aman.name);
  
-- global and local scopes
-- strict mode: used for proper syntax only. "use strict". semi colons are a better practice to be added
-- js supports dynamic typing. we can assign same variable to number as well as strings. we can switch things.
-- js offers hoisting!! means it goes through the code twice. This gets all the variable declarations to the top line. 

               aman = 1;
               console.log(aman);
               var aman; 

               this is equal to 

               var aman; 
               aman = 1;
               console.log(aman);

               but 
               console.log(aman);
               var aman; 
               aman = 1;
               will produce an output that is "undefined". because the declaration must be done before hand. 
               otherwise it is using some variable without 
               any declaration
               
-- function aman(){} is the syntax of the function. and it is called using the function keyword aman(); . Thanks to hoisting we can call
the fucntion and declare it, or vice versa. 

      another way to declare a function is 

      var aman=function (){};// typeof aman is "function"

      we can also equate functions like we have taken equate number variable:

      var ali=aman;//ali() is same as aman()
-- function parameters are same as other languages. aman(a);

-- flow control can be done using if, else if, else. // '1' or any number that is greater
is interpreted as true in boolean thing

-- 1==true//true
   1===true//false
   2==true//false
   if(2)// its greater than zero are true. 
   any string in the if statement is also interpreted as true. for example if(anyText)//true.
   if(null)// null is treated as false
   
 -- switch statement is very similar to other languages
   break keyword is used to exit one section.
 -- for loop is similar to what it is in other languages.
 
 -- "break" exits the loop, "continue" exits the current iteration and skips to the next iteration.
 
 -- there is not arraysoutofbounds exception in javascript. it just prints the "undefined" and continues executing.
 -- array.length returns the length of the array. 
 -- a='am'
    b='an'
    a+b="aman"
    ---
    a=3
    b='a'
    a+b=3a
    ---
    a= [1,2]
    b='a'
    a+b= 1,2 a
    ---
    a=18
    b='08'
    a+b="1808"
    ---
    a= 13
    b= true
    a+b= 14
    ---
    a=true
    b= true
    a+b=2
    ---
    a=18
    b=null
    a+b=18
    ---
    a=18
    b=undefined
    a+b=NaN
    ---
    a=18
    b=NaN
    a+b=NaN
    
    
 -- a="aman"
    b="an"
    a-b=NaN
    ------
    a=14
    b='1'
    a-b=13 // not looking at b as a string
    ------
    
 -- a=1.3
    b=2.2
    a*b = 2.8600000000000003 // not 2.86!! it is a bug in javascript. floating point inaccuracy
    can be fixed by using toFixed() method.
    
    ------
    a=2
    b='2.2'
    a*b=4.4
    ------
    a=2
    b='a'
    a*b=NaN
    ------
    a=1
    b=null
    a*b=0
    ------
    a=9
    b=infinity
    a*b=infinity 
    ------
 
-- a=3
   b='3'
   a/b=1
   ------
   a=2.2
   b=1.1
   a/b=1.4999999999999998// inaccuracy
   
   ------
   
   10/0=infinity
   -------
   10/infinity=0
   -------
    
--
   1==1 //true
   1===1//true
   1==='1'//false
   1=='1'//true
   1!=='1'//true
   '>==' operator doesn't exist // no type checking exists in this way. it makes no sense
   
   

 

